[
	{
		"name": "ems_oauth2_backend",
		"comment": "ems_oauth2_backend",
		"owner": "ems_bus",
		"version": "1.0.0",
		"service" : "ems_oauth2_backend:start",
		"url": "/emsbus/ems_oauth2_backend",
		"type": "KERNEL",
		"lang" : "erlang",
		"pool_size" : 1,
		"pool_max" : 1,
		
		"persist_token_sgbd_enabled" : false,
		"datasource_persist_sgbd" : "db2",
		"sql_persist_access_code" : "insert into dbsm.erlangms_oauth2_access_code(id, dt_registro, context) values (?,current_date,?)",
		"sql_select_access_code" : "select id, dt_registro, context from dbsm.erlangms_oauth2_access_code where id = ?",
		"sql_persist_refresh_token" : "insert into dbsm.erlangms_oauth2_refresh_token(id, dt_registro, context) values (?,current_date,?)",
		"sql_select_refresh_token" : "select id, dt_registro, context from dbsm.erlangms_refresh_token where id = ?",
		"sql_persist_access_token" : "insert into dbsm.erlangms_oauth2_access_token(id, dt_registro, context) values (?,current_date,?)",
		"sql_select_access_token" : "select id, dt_registro, context from dbsm.erlangms_access_token where id = ?",
		"passport_code_enabled" : true,
		"datasource_passport_code" : "sig_unb",
		"sql_select_passport_code" : "select clientid, userid, dt_created, escopo from oauth.oauth_erlangms_passport where id =?  and active = 1",
		"sql_disable_passport_code" : "update oauth.oauth_erlangms_passport set active = 0, dt_disabled = current_timestamp where id = ?"
	},
	
	{
		"name" : "/authorize",
		"comment": "Oauth 2.0",
		"owner": "auth",
		"version": "1.0.0",
		"service" : "ems_oauth2_authorize:execute",
		"url": "/authorize",
		"result_cache" : 0,
		"type": "GET",
		"authorization" : "public",
		"querystring": [
			{
				"name": "response_type",
				"type": "string",
				"default" : "0",
				"comment": ""
			},
			{
				"name": "client_id",
				"type": "string",
				"comment": "The client identifier"
			},
			{
				"name": "username",
				"type": "string",
				"comment": "Username"
			},
			{
				"name": "password",
				"type": "string",
				"comment": "Password"
			},
			{
				"name": "redirect_uri",
				"type": "string",
				"comment": ""
			},
			{
				"name": "scope",
				"type": "string",
				"comment": ""
			},
			{
				"name": "secret",
				"type": "string",
				"comment": ""
			},
			
			{
				"name": "code",
				"type": "string",
				"comment": ""
			},
			{
				"name": "state",
				"type": "string",
				"comment": ""
			},
			{
				"name": "passport",
				"type": "string",
				"comment": "The passport"
			}
		],
		"lang" : "erlang"
	},

	{
		"name" : "/authorize",
		"comment": "Oauth 2.0",
		"owner": "auth",
		"version": "1.0.0",
		"service" : "ems_oauth2_authorize:execute",
		"url": "/authorize",
		"type": "POST",
		"result_cache" : 0,
		"authorization" : "public",
		"querystring": [
			{
				"name": "grant_type",
				"type": "string",
				"default" : "0",
				"comment": ""
			},
			{
				"name": "client_id",
				"type": "string",
				"comment": "The client identifier"
			},
			{
				"name": "username",
				"type": "string",
				"comment": "Username"
			},
			{
				"name": "password",
				"type": "string",
				"comment": "Password"
			},
			{
				"name": "redirect_uri",
				"type": "string",
				"comment": ""
			},
			{
				"name": "scope",
				"type": "string",
				"comment": ""
			},
			{
				"name": "client_secret",
				"type": "string",
				"comment": ""
			},
			{
				"name": "secret",
				"type": "string",
				"comment": ""
			},
			{
				"name": "code",
				"type": "string",
				"comment": ""
			},
			{
				"name": "state",
				"type": "string",
				"comment": ""
			},
			{
				"name": "refresh_token",
				"type": "string",
				"comment": "The refresh token, which can be used to obtain new  access tokens using the same authorization grant"
			},
			{
				"name": "passport",
				"type": "string",
				"comment": "The passport"
			}
		],
		"lang" : "erlang"
	},
	
	{
		"name" : "/code_request",
		"comment": "Oauth 2.0",
		"owner": "auth",
		"version": "1.0.0",
		"service" : "ems_oauth2_authorize:code_request",
		"url": "/code_request",
		"type": "GET",
		"result_cache" : 0,
		"authorization" : "basic",
		"querystring": [
			{
				"name": "client_id",
				"type": "string",
				"comment": "The client identifier"
			},
			{
				"name": "username",
				"type": "string",
				"comment": "Username"
			},
			{
				"name": "password",
				"type": "string",
				"comment": "Password"
			},			
			{
				"name": "redirect_uri",
				"type": "string",
				"comment": ""
			},
			{
				"name": "scope",
				"type": "string",
				"comment": ""
			},
			{
				"name": "code",
				"type": "string",
				"comment": ""
			},
			{
				"name": "state",
				"type": "string",
				"comment": ""
			}
		],
		"lang" : "erlang"
	},
	
	{
		"name" : "/callback",
		"comment": "Simulção de recurso",
		"owner": "auth",
		"version": "1.0.0",
		"service" : "ems_oauth2_client:callback",
		"url": "/callback",
		"type": "GET",
		"result_cache" : 0,
		"querystring": [
			{
				"name": "code",
				"type": "string",
				"comment": "Token de acesso"
			}
		],
		"lang" : "erlang"
	},
	
	{
		"name" : "/resource",
		"comment": "Get resource",
		"owner": "auth",
		"version": "1.0.0",
		"service" : "ems_oauth2_recurso:execute",
		"url": "/resource",
		"type": "POST",
		"result_cache" : 0,
		"authorization": "oauth2",
		"querystring": [
			{
				"name": "token",
				"type": "string",
				"comment": "Token de acesso"
			}
		],
		"lang" : "erlang"
	},

	{
		"name" : "/recurso",
		"comment": "Obter o recurso",
		"owner": "auth",
		"version": "1.0.0",
		"service" : "ems_oauth2_recurso:execute",
		"url": "/recurso",
		"type": "POST",
		"result_cache" : 0,
		"authorization": "oauth2",
		"querystring": [
			{
				"name": "token",
				"type": "string",
				"comment": "Token de acesso"
			}
		],
		"lang" : "erlang"
	}
]
